Installing scikit-image
-----------------------
If you are on Mac OS X you're lucky, open the terminal and install
scikit-image with pip::

  pip install scikit-image


For python 3 use pip3 instead::

  pip3 install scikit-image


For other systems, please read on.


Linux, Mac and Windows
----------------------
An easy light weight method to get scikit-image installed on all of the most
popular operating systems is by using miniconda_. Go over and grab the
appropriate miniconda_ version for your operating system and install it. When
you have miniconda_ installed, open a terminal and install scikit-image
with conda::

  conda install scikit-image


If you prefer *not* using miniconda, find instructions for your operating
system below.


Windows
-------
Scikit-image comes with the Python distributions Anaconda_,
`Enthought Canopy`_ and `Python(x,y)`_. If you install any of
them, scikit-image should already be installed.

.. _Anaconda: https://store.continuum.io/cshop/anaconda/
.. _Enthought Canopy: https://www.enthought.com/products/canopy/
.. _Python(x,y): http://code.google.com/p/pythonxy/wiki/Welcome


If you prefer the regular Python distribution from python.org, you can install
scikit-image manually by downloading packages. You will need numpy_, scipy_
and the scikit-image package. You will find `numpy at SourceForge`_ or
in `Cristoph Gohlke's numpy section`_ of compiled python packages, and
`scipy at SourceForge`_ or at `Gohlke's scipy section`_.

To install Goehlke's packages, use pip::

  pip install wheel
  pip install numpy‑1.9.2+mkl‑cp34‑none‑win_amd64.whl
  pip install scipy‑0.15.1‑cp34‑none‑win_amd64.whl


Make sure you download the right version for your system. E.g. commands above
are for Windows 64 bit and Python 3.4.

When you have numpy and scipy, download and install `scikit-image from Goehlke`_.
As you see, installing scikit-image manually is cumbersome, so using a Python
distribution is recommended on Windows.

If you have a brave soul, you can also install scikit-image on Windows by
compiling it from source::

  pip install scikit-image


If you experience the error ``Error:unable to find vcvarsall.bat`` it means that
distutils is not correctly configured to use the C compiler. Modify (or create,
if not existing) the configuration file ``distutils.cfg`` (located for
example at ``C:\Python26\Lib\distutils\distutils.cfg``) to contain::

    [build]
    compiler=mingw32

For more details on compiling in Windows, there is a lot of knowledge iterated
into the `setup of appveyor`_ (a continious integration service).

.. _miniconda: http://conda.pydata.org/miniconda.html
.. _numpy: http://www.numpy.org/
.. _scipy: http://www.scipy.org/
.. _numpy at SourceForge: http://sourceforge.net/projects/numpy/files/NumPy/
.. _Cristoph Gohlke's numpy section: http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy
.. _scipy at SourceForge: http://sourceforge.net/projects/scipy/files/scipy/
.. _Gohlke's scipy section: http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy
.. _scikit-image from Goehlke: http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikit-image
.. _setup of appveyor: https://github.com/scikit-image/scikit-image/blob/master/appveyor.yml

Debian and Ubuntu
-----------------
On Debian and Ubuntu install scikit-image with::

  sudo apt-get install python-skimage


Or if you use Python 3::

  sudo apt-get install python3-skimage


On Ubuntu scikit-image is found in the `universe repo`_, and python-skimage can
also be found in the `Neurodebian repository`_. For using the repository
follow the `Neurodebian instructions`_ to add Neurodebian to your system 
package manager.

Ubuntu 14.04 LTS ships with version 0.9.3 of scikit-image, so if you need an
up-to-date version you must compile scikit-image yourself. First install the
dependencies::

  sudo apt-get install python-matplotlib python-numpy python-pil python-scipy


or for python 3::

  sudo apt-get install python3-matplotlib python3-numpy python3-pil python3-scipy


Get compilers::

  sudo apt-get install build-essential


Compile and install the latest stable version of scikit-image::

  pip install scikit-image


.. _universe repo: https://help.ubuntu.com/community/Repositories/Ubuntu
.. _Neurodebian repository: http://neuro.debian.net/
.. _Neurodebian instructions: http://neuro.debian.net/#how-to-use-this-repository


Other Unixes
------------
Install binary packages of matplotlib, numpy, pillow and scipy if they are
available in your operating system's package manager. Make sure you have
a C and C++ compiler. Then install scikit-image with pip::

  pip install scikit-image


Upgrading
---------
You can upgrade scikit-image by::

  pip install --upgrade --no-deps scikit-image
  pip install scikit-image


Building with bento
-------------------

``scikit-image`` can also be built using `bento
<http://cournape.github.io/Bento/>`__.  Bento depends on `WAF
<https://code.google.com/p/waf/>`__ for compilation.

Follow the `Bento installation instructions
<http://cournape.github.io/Bento/html/install.html>`__ and `download the WAF
source <http://code.google.com/p/waf/downloads/list>`__.

Tell Bento where to find WAF by setting the ``WAFDIR`` environment variable::

    export WAFDIR=<path/to/waf>

From the ``scikit-image`` source directory::

    bentomaker configure
    bentomaker build -j     # (add -i for in-place build)
    bentomaker install      # (when not builing in-place)

Depending on file permissions, the install commands may need to be run as
sudo.


Install bleeding edge development version
-----------------------------------------

Obtain the source from the git-repository at
`http://github.com/scikit-image/scikit-image
<http://github.com/scikit-image/scikit-image>`_ by running::

  git clone http://github.com/scikit-image/scikit-image.git

in a terminal (you will need to have git installed on your machine).

If you do not have git installed, you can also download a zipball from
`https://github.com/scikit-image/scikit-image/zipball/master
<https://github.com/scikit-image/scikit-image/zipball/master>`_.

The scikit can be installed using::

  pip install .

If you prefer, you can use a link instead by compiling extensions in-place::

  python setup.py build_ext -i
  pip install -e .


.. include:: ../../DEPENDS.txt
